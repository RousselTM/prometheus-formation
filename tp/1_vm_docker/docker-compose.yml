services:
  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    labels:
      org.label-schema.group: "observabilite"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - observability
  
  grafana:
    image: grafana/grafana
    labels:
      org.label-schema.group: "observabilite"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    ports:
      - ${GRAFANA_PORT}:3000
    #command: 
    #  - grafana cli plugins install grafana-piechart-panel
    networks:
      - observability
  
  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    labels:
      org.label-schema.group: "observabilite"
    ports:
      - "9093:9093"
    volumes:
      - "./alertmanager:/config"
      - alertmanager_data:/data
    command: --config.file=/config/alertmanager.yml --log.level=debug
    networks:
      - observability
  
  pushgateway:
    image: prom/pushgateway
    restart: unless-stopped
    labels:
      org.label-schema.group: "observabilite"
    ports:
      - "9091:9091"
    networks:
      - observability

networks:
  observability:
    driver: bridge

volumes:
  prometheus_data: {}
  alertmanager_data:
  grafana_data:
    driver: local